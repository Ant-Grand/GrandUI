<?xml version="1.0" encoding="UTF-8"?>
<project default="jars" name="grand-ui" basedir=".">
	<property file="build-local.properties"/>
	<property file="build.properties"/>

	<property name="product.name" value="grand-ui"/>
	<property name="product.fullname" value="${product.name}-${product.version}"/>
	<property name="product.vendor" value="ggTools"/>
	<property name="libdir" value="lib"/>
	<property name="extlibdir" value="deps"/>
	<property name="dlcachedir" value="cache"/>
	<property name="classdir" value="bin"/>
	<property name="srcdir" value="src/main/java"/>
	<property name="confdir" value="src/main/resources"/>
	<property name="scriptdir" value="src/main/scripts"/>
	<property name="buildnum-file" value="${confdir}/net/ggtools/grand/ui/buildnum.properties"/>
	<property name="distdir" value="dist"/>
	<property name="javadocdir" value="tmp/docs/api"/>
	<property name="java.target" value="1.6"/>
	<property name="bundle.name" value="GrandUI.app"/>
	<property name="bundle.launcher.name" value="JavaAppLauncher"/>

	<property name="verbose-get" value="false"/>

	<tstamp>
		<format pattern="2004-yyyy" property="years"/>
	</tstamp>

	<macrodef name="getjar" description="Download a jar to the extlib directory">
		<attribute name="dest"/>
		<attribute name="url"/>
		<sequential>
			<get dest="${dlcachedir}/@{dest}" verbose="${verbose-get}" usetimestamp="true" ignoreerrors="true" src="@{url}"/>
			<copy file="${dlcachedir}/@{dest}" todir="${extlibdir}" preservelastmodified="true"/>
		</sequential>
	</macrodef>

	<macrodef name="get-extract-zip">
		<attribute name="dest"/>
		<attribute name="url"/>
		<attribute name="libdir" default="${extlibdir}"/>
		<element name="select" optional="yes"/>
		<sequential>
			<get dest="${dlcachedir}/@{dest}.zip" verbose="${verbose-get}" usetimestamp="true" ignoreerrors="true" src="@{url}"/>
			<delete dir="${dlcachedir}/@{dest}"/>
			<mkdir dir="${dlcachedir}/@{dest}"/>
			<unzip dest="${dlcachedir}/@{dest}" src="${dlcachedir}/@{dest}.zip">
				<select/>
			</unzip>
			<mkdir dir="@{libdir}"/>
			<copy todir="@{libdir}" flatten="true" includeemptydirs="no" preservelastmodified="true">
				<fileset dir="${dlcachedir}/@{dest}"/>
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="get-extract-tgz">
		<attribute name="dest"/>
		<attribute name="url"/>
		<attribute name="libdir" default="${extlibdir}"/>
		<element name="select" optional="yes"/>
		<sequential>
			<get dest="${dlcachedir}/@{dest}.tgz" verbose="${verbose-get}" usetimestamp="true" ignoreerrors="true" src="@{url}"/>
			<delete dir="${dlcachedir}/@{dest}"/>
			<mkdir dir="${dlcachedir}/@{dest}"/>
			<untar compression="gzip" dest="${dlcachedir}/@{dest}" src="${dlcachedir}/@{dest}.tgz">
				<select/>
			</untar>
			<mkdir dir="@{libdir}"/>
			<copy todir="@{libdir}" flatten="true" includeemptydirs="no" preservelastmodified="true">
				<fileset dir="${dlcachedir}/@{dest}"/>
			</copy>
		</sequential>
	</macrodef>

	<selector id="src-dist-selector">
		<or>
			<filename name="${srcdir}/**"/>
			<filename name="${confdir}/**"/>
			<filename name="${scriptdir}/**"/>
			<filename name="README.txt"/>
			<filename name="LICENSE"/>
			<filename name="COPYING"/>
			<filename name="LICENSE-Graphviz.txt"/>
			<filename name="cpl-v10.html"/>
			<filename name="build.xml"/>
			<filename name="build.properties"/>
		</or>
	</selector>

	<patternset id="get-rcp-patterns">
		<!--
		<include name="**/org.eclipse.core.runtime_${eclipse.core.version}*.jar"/>
		See http://wiki.eclipse.org/index.php/JFace#Using_JFace_outside_the_Eclipse_platform
		-->
		<include name="**/org.eclipse.equinox.common_${eclipse.equinox.version}*.jar"/>
		<include name="**/org.eclipse.core.commands_${eclipse.commands.version}*.jar"/>
		<!-- workbench is optional -->
		<!-- include name="**/org.eclipse.ui.workbench_${eclipse.workbench.version}*.jar"/ -->
		<include name="**/org.eclipse.osgi_${eclipse.osgi.version}*.jar"/>
		<include name="**/org.eclipse.jface_${eclipse.jface.version}*.jar"/>
		<include name="**/com.ibm.icu_${icu.version}*.jar"/>
		<include name="**/org.eclipse.swt.*x86_${swt.version}.jar"/>
		<include name="**/org.eclipse.swt.*x86_64_${swt.version}.jar"/>
		<exclude name="**/org.eclipse.swt.gtk.solaris.*.jar"/>
	</patternset>

	<target name="javadoc" description="Generates javadoc" depends="jars">
		<mkdir dir="${javadocdir}"/>
		<property name="copyright" value="Copyright &amp;copy;${years} ${product.vendor}. All Rights Reserved."/>
		<property name="title" value="Grand UI ${product.version} API"/>
		<javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" windowtitle="Grand UI" doctitle="${title}" bottom="${copyright}"
				 sourcepath="${srcdir}" packagenames="net.ggtools.grand.*">
			<classpath>
				<fileset dir="${libdir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${extlibdir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javadoc>
	</target>

	<target name="dist" depends="bin-dist,src-dist" description="Create source and binary distributions"/>

	<target name="src-dist">
		<mkdir dir="${distdir}"/>
		<tar destfile="${distdir}/${product.fullname}-src.tar.gz" compression="gzip">
			<tarfileset dir="." prefix="${product.fullname}-src">
				<selector refid="src-dist-selector"/>
			</tarfileset>
		</tar>
		<zip destfile="${distdir}/${product.fullname}-src.zip">
			<zipfileset dir="." prefix="${product.fullname}-src">
				<selector refid="src-dist-selector"/>
			</zipfileset>
		</zip>
	</target>

	<target name="bin-dist" depends="clean,jars">
		<mkdir dir="${distdir}"/>
		<!-- Prepare for bin distribution -->
		<delete dir="tmp"/>
		<mkdir dir="tmp/${product.fullname}"/>
		<!-- Java libraries -->
		<copy tofile="tmp/${product.fullname}/lib/grand-ui.jar" file="${libdir}/${product.fullname}.jar"/>
		<copy todir="tmp/${product.fullname}/lib">
			<fileset dir="${extlibdir}" excludes="org.eclipse.*.jar,com.ibm.*.jar,swt.jar,appbundler.jar"/>
		</copy>
		<!-- Equinox versions are incompatible with JPMS automatic module naming -->
		<copy todir="tmp/${product.fullname}/lib">
			<fileset dir="${extlibdir}" excludes="org.eclipse.swt.*.jar"/>
			<regexpmapper from="([^_]*)_(\d+\.\d+\.\d+).*\.jar" to="\1-\2.jar"/>
		</copy>
		<!-- SWT platform-specific libraries -->
		<copy todir="tmp/${product.fullname}/lib/gtk/x86">
			<fileset dir="${extlibdir}" includes="org.eclipse.swt.gtk.*.x86_*.jar" excludes="org.eclipse.swt.gtk.*.x86_64*.jar"/>
			<regexpmapper from="([^_]*).x86_(\d+\.\d+\.\d+).*\.jar" to="\1-\2.jar"/>
		</copy>
		<copy todir="tmp/${product.fullname}/lib/gtk/x86_64">
			<fileset dir="${extlibdir}" includes="org.eclipse.swt.gtk.*.x86_64*.jar"/>
			<regexpmapper from="([^_]*).x86_64_(\d+\.\d+\.\d+).*\.jar" to="\1-\2.jar"/>
		</copy>
		<copy todir="tmp/${product.fullname}/lib/win32/x86">
			<fileset dir="${extlibdir}" includes="org.eclipse.swt.win32.*.x86_*.jar" excludes="org.eclipse.swt.win32.*.x86_64*.jar"/>
			<regexpmapper from="([^_]*).x86_(\d+\.\d+\.\d+).*\.jar" to="\1-\2.jar"/>
		</copy>
		<copy todir="tmp/${product.fullname}/lib/win32/x86_64">
			<fileset dir="${extlibdir}" includes="org.eclipse.swt.win32.*.x86_64*.jar"/>
			<regexpmapper from="([^_]*).x86_64_(\d+\.\d+\.\d+).*\.jar" to="\1-\2.jar"/>
		</copy>
		<!-- Licenses -->
		<copy todir="tmp/${product.fullname}" flatten="true">
			<fileset dir=".">
				<include name="README.txt"/>
				<include name="LICENSE"/>
				<include name="COPYING"/>
				<include name="LICENSE-Graphviz.txt"/>
				<include name="cpl-v10.html"/>
			</fileset>
		</copy>
		<copy todir="tmp/${product.fullname}">
				<fileset dir="${scriptdir}" includes="**/*.sh"/>
				<globmapper from="*.sh" to="*"/>
		</copy>
		<chmod perm="755">
			<fileset dir="tmp/${product.fullname}" includes="grand-ui"/>
		</chmod>
		<copy todir="tmp/${product.fullname}">
			<fileset dir="${scriptdir}" includes="**/*.bat"/>
		</copy>
		<fixcrlf srcdir="tmp/${product.fullname}" includes="*.bat" eol="dos"/>

		<copy todir="tmp">
			<fileset dir="${scriptdir}" includes="${bundle.name}/**" excludes="**/*.icns"/>
			<filterset>
				<filter token="VENDOR" value="${product.vendor}"/>
				<filter token="VERSION" value="${product.version}"/>
				<filter token="YEARS" value="${years}"/>
			</filterset>
		</copy>
		<copy todir="tmp">
			<fileset dir="${scriptdir}" includes="**/*.icns"/>
		</copy>
		<copy todir="tmp/${bundle.name}/Contents/Resources" flatten="true">
			<fileset dir=".">
				<include name="README.txt"/>
				<include name="LICENSE"/>
				<include name="COPYING"/>
				<include name="LICENSE-Graphviz.txt"/>
				<include name="cpl-v10.html"/>
			</fileset>
		</copy>
		<mkdir dir="tmp/${bundle.name}/Contents/MacOS"/>
		<copy todir="tmp/${bundle.name}/Contents/MacOS">
			<mappedresources>
				<zipfileset src="${extlibdir}/appbundler.jar" includes="**/${bundle.launcher.name}"/>
				<flattenmapper/>
			</mappedresources>
		</copy>
		<chmod perm="755">
			<fileset dir="tmp/${bundle.name}/Contents/MacOS"/>
		</chmod>
		<mkdir dir="tmp/${bundle.name}/Contents/Java"/>
		<copy todir="tmp/${bundle.name}/Contents/Java">
			<fileset dir="${extlibdir}" includes="*.jar" excludes="org.eclipse.swt.gtk.*.jar,org.eclipse.swt.win32.*.jar,swt.jar,appbundler.jar"/>
		</copy>
		<copy tofile="tmp/${bundle.name}/Contents/Java/grand-ui.jar" file="${libdir}/${product.fullname}.jar"/>

		<tar destfile="${distdir}/${product.fullname}.tar.gz" compression="gzip">
			<tarfileset dir="tmp/${product.fullname}" prefix="${product.fullname}" filemode="755">
				<include name="grand-ui"/>
			</tarfileset>
			<tarfileset dir="tmp/${product.fullname}" prefix="${product.fullname}">
				<exclude name="grand-ui"/>
			</tarfileset>
			<tarfileset dir="tmp/${bundle.name}" prefix="${bundle.name}" filemode="755">
				<include name="**/${bundle.launcher.name}"/>
			</tarfileset>
			<tarfileset dir="tmp/${bundle.name}" prefix="${bundle.name}">
				<exclude name="**/${bundle.launcher.name}"/>
			</tarfileset>
		</tar>

		<zip destfile="${distdir}/${product.fullname}.zip">
			<zipfileset dir="tmp/${product.fullname}" prefix="${product.fullname}" filemode="755">
				<include name="grand-ui"/>
			</zipfileset>
			<zipfileset dir="tmp/${product.fullname}" prefix="${product.fullname}">
				<exclude name="grand-ui"/>
			</zipfileset>
			<zipfileset dir="tmp/${bundle.name}" prefix="${bundle.name}" filemode="755">
				<include name="**/${bundle.launcher.name}"/>
			</zipfileset>
			<zipfileset dir="tmp/${bundle.name}" prefix="${bundle.name}">
				<exclude name="**/${bundle.launcher.name}"/>
			</zipfileset>
		</zip>
	</target>

	<target name="jars" depends="compile.java,incbuildnum" description="Create the application jar(s)">
		<mkdir dir="${libdir}"/>
		<jar destfile="${libdir}/${product.fullname}.jar" index="true">
			<fileset dir="${classdir}"/>
			<fileset dir="${confdir}"/>
			<manifest>
				<attribute name="Main-Class" value="net.ggtools.grand.ui.Application"/>
				<section name="net/ggtools/grand/ui">
					<attribute name="Specification-Title" value="${product.name}"/>
					<attribute name="Specification-Version" value="${product.version}"/>
					<attribute name="Specification-Vendor" value="${product.vendor}"/>
					<attribute name="Implementation-Title" value="${product.name}"/>
					<attribute name="Implementation-Version" value="${product.version}"/>
					<attribute name="Implementation-Vendor" value="${product.vendor}"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="compile.java" depends="init" description="Compile the java source files">
		<mkdir dir="${classdir}"/>
		<javac srcdir="${srcdir}" destdir="${classdir}" debug="true" optimize="true" includeantruntime="false" source="${java.target}" target="${java.target}">
			<classpath>
				<path refid="ext-libs"/>
			</classpath>
		</javac>
	</target>

	<target name="incbuildnum" unless="noincbuildnum">
		<propertyfile file="${buildnum-file}">
			<entry key="build.date" type="date" value="now" pattern="yyyy-MM-dd"/>
			<entry key="build.time" type="date" value="now" pattern="HH:mm:ss"/>
			<entry key="build.number" type="int" operation="+" default="0"/>
			<entry key="build.version.string" type="string" value="${product.version}"/>
		</propertyfile>
		<property file="${buildnum-file}"/>
		<echo message="build number set to ${build.number}"/>
	</target>

	<target name="init" depends="get-deps">
		<path id="ext-libs">
			<fileset dir="${extlibdir}">
				<include name="**/*.jar"/>
			</fileset>
		</path>
	</target>

	<target name="clean" depends="clean.dist,clean.deps" description="Remove intermediate files but not external libs">
		<delete dir="${libdir}"/>
		<delete dir="${classdir}"/>
	</target>

	<target name="clean.deps" description="Clean the dependencies directory">
		<delete dir="${extlibdir}"/>
	</target>

	<target name="clean.dist" description="Clean the dist directory">
		<delete dir="${distdir}"/>
	</target>

	<target name="real.clean" depends="clean" description="Remove intermediate files ant external libs">
		<delete dir="${dlcachedir}"/>
	</target>

	<target name="get-deps" depends="get-extjars,get-draw2d" description="Get and prepare the external libraries"/>

	<target name="get-extjars" depends="prepare-download" unless="noget">
		<getjar dest="ant.jar" url="${url.ant.jar}"/>
		<getjar dest="ant-launcher.jar" url="${url.ant-launcher.jar}"/>
		<getjar dest="commons-logging.jar" url="${url.commons-logging.jar}"/>
		<getjar dest="blacksun-util.jar" url="${url.blacksun-util.jar}"/>
		<getjar dest="jzgraph.jar" url="${url.jzgraph.jar}"/>
		<getjar dest="oro.jar" url="${url.oro.jar}"/>
		<getjar dest="grand-module.jar" url="${url.grand.jar}"/>
		<getjar dest="ant-contrib.jar" url="${url.ant-contrib.jar}"/>
		<getjar dest="appbundler.jar" url="${url.appbundler.jar}"/>
	</target>

	<target name="get-rcp-zip">
		<fail unless="url.eclipse.rcp" message="url.eclipse.rcp should be defined"/>
		<get-extract-zip dest="rcp" url="${url.eclipse.rcp}">
			<select>
				<patternset refid="get-rcp-patterns"/>
			</select>
		</get-extract-zip>
	</target>

	<target name="get-rcp-tgz">
		<fail unless="url.eclipse.rcp" message="url.eclipse.rcp should be defined"/>
		<get-extract-tgz dest="rcp" url="${url.eclipse.rcp}">
			<select>
				<patternset refid="get-rcp-patterns"/>
			</select>
		</get-extract-tgz>
	</target>

	<target name="get-rcp" depends="set-swt-properties" unless="noget">
		<antcall target="${get-rcp-target}" inheritall="true" inheritrefs="true"/>
	</target>

	<target name="get-draw2d" depends="set-eclipse" unless="noget">
		<get-extract-zip dest="gef" url="${url.gef}">
			<select>
				<patternset>
					<include name="plugins/org.eclipse.draw2d_${eclipse.draw2d.version}*.jar"/>
				</patternset>
			</select>
		</get-extract-zip>
	</target>

	<target name="set-eclipse" depends="get-rcp" if="eclipse.pdebuild.home">
		<copy tofile="${extlibdir}/swt.jar">
			<fileset dir="${extlibdir}" includes="org.eclipse.swt.${swtfw}.${swtarch}_${swt.version}.jar"/>
		</copy>
	</target>

	<target name="prepare-download">
		<mkdir dir="${extlibdir}"/>
		<mkdir dir="${dlcachedir}"/>
	</target>

	<target name="set-swt-properties" description="Set the swt properties">
		<property name="get-rcp-target" value="get-rcp-zip"/>
		<condition property="swtfw" value="gtk.linux">
			<os name="Linux"/>
		</condition>

		<condition property="swtfw" value="win32.win32">
			<os family="windows"/>
		</condition>

		<condition property="swtfw" value="cocoa.macosx">
			<os family="mac"/>
		</condition>

		<condition property="swtarch" value="x86_64" else="x86">
			<equals arg1="${sun.arch.data.model}" arg2="64"/>
		</condition>
	</target>
</project>
